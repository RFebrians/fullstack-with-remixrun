{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/root.tsx", "mdx:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/posts/test category.md", "mdx:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/posts/90s-mix-cdr.md", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/actions.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/correct.tsx", "mdx:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/my-first-post.md", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/params.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/params/index.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/params/$id.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/about.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/about/index.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/about/whoa.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes[.]rss.tsx", "../app/utils/db.server.ts", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/logout.tsx", "../app/utils/session.server.ts", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/index.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/CommentForm.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/$jokeId.tsx", "../app/components/joke.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/comment.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/index.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/new.tsx", "route-module:/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/login.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/entry.server.tsx\";\nimport * as route0 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/root.tsx\";\nimport * as route1 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/posts/test category.md\";\nimport * as route2 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/posts/90s-mix-cdr.md\";\nimport * as route3 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/actions.tsx\";\nimport * as route4 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/correct.tsx\";\nimport * as route5 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/my-first-post.md\";\nimport * as route6 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/params.tsx\";\nimport * as route7 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/params/index.tsx\";\nimport * as route8 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/params/$id.tsx\";\nimport * as route9 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/about.tsx\";\nimport * as route10 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/about/index.tsx\";\nimport * as route11 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/demos/about/whoa.tsx\";\nimport * as route12 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes[.]rss.tsx\";\nimport * as route13 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/logout.tsx\";\nimport * as route14 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/index.tsx\";\nimport * as route15 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes.tsx\";\nimport * as route16 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/CommentForm.tsx\";\nimport * as route17 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/$jokeId.tsx\";\nimport * as route18 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/comment.tsx\";\nimport * as route19 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/index.tsx\";\nimport * as route20 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/jokes/new.tsx\";\nimport * as route21 from \"/media/zegveld/9EA0FA39A0FA180B1/PROJECT FULLSTACK/remix-js/vercel/jokes2/app/routes/login.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/posts/test category\": {\n    id: \"routes/posts/test category\",\n    parentId: \"root\",\n    path: \"posts/test category\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/posts/90s-mix-cdr\": {\n    id: \"routes/posts/90s-mix-cdr\",\n    parentId: \"root\",\n    path: \"posts/90s-mix-cdr\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/demos/actions\": {\n    id: \"routes/demos/actions\",\n    parentId: \"root\",\n    path: \"demos/actions\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/demos/correct\": {\n    id: \"routes/demos/correct\",\n    parentId: \"root\",\n    path: \"demos/correct\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/my-first-post\": {\n    id: \"routes/my-first-post\",\n    parentId: \"root\",\n    path: \"my-first-post\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  },\n  \"routes/demos/params\": {\n    id: \"routes/demos/params\",\n    parentId: \"root\",\n    path: \"demos/params\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route6\n  },\n  \"routes/demos/params/index\": {\n    id: \"routes/demos/params/index\",\n    parentId: \"routes/demos/params\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route7\n  },\n  \"routes/demos/params/$id\": {\n    id: \"routes/demos/params/$id\",\n    parentId: \"routes/demos/params\",\n    path: \":id\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route8\n  },\n  \"routes/demos/about\": {\n    id: \"routes/demos/about\",\n    parentId: \"root\",\n    path: \"demos/about\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route9\n  },\n  \"routes/demos/about/index\": {\n    id: \"routes/demos/about/index\",\n    parentId: \"routes/demos/about\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route10\n  },\n  \"routes/demos/about/whoa\": {\n    id: \"routes/demos/about/whoa\",\n    parentId: \"routes/demos/about\",\n    path: \"whoa\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route11\n  },\n  \"routes/jokes[.]rss\": {\n    id: \"routes/jokes[.]rss\",\n    parentId: \"root\",\n    path: \"jokes.rss\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route12\n  },\n  \"routes/logout\": {\n    id: \"routes/logout\",\n    parentId: \"root\",\n    path: \"logout\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route13\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route14\n  },\n  \"routes/jokes\": {\n    id: \"routes/jokes\",\n    parentId: \"root\",\n    path: \"jokes\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route15\n  },\n  \"routes/jokes/CommentForm\": {\n    id: \"routes/jokes/CommentForm\",\n    parentId: \"routes/jokes\",\n    path: \"CommentForm\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route16\n  },\n  \"routes/jokes/$jokeId\": {\n    id: \"routes/jokes/$jokeId\",\n    parentId: \"routes/jokes\",\n    path: \":jokeId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route17\n  },\n  \"routes/jokes/comment\": {\n    id: \"routes/jokes/comment\",\n    parentId: \"routes/jokes\",\n    path: \"comment\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route18\n  },\n  \"routes/jokes/index\": {\n    id: \"routes/jokes/index\",\n    parentId: \"routes/jokes\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route19\n  },\n  \"routes/jokes/new\": {\n    id: \"routes/jokes/new\",\n    parentId: \"routes/jokes\",\n    path: \"new\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route20\n  },\n  \"routes/login\": {\n    id: \"routes/login\",\n    parentId: \"root\",\n    path: \"login\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route21\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import ReactDOMServer from \"react-dom/server\";\nimport type { EntryContext } from \"remix\";\nimport { RemixServer } from \"remix\";\n\n// entry for server\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = ReactDOMServer.renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Meta, Links, Scripts, LiveReload, useCatch } from \"remix\";\nimport type { LinksFunction, MetaFunction } from \"remix\";\nimport { Outlet } from \"react-router-dom\";\n\nimport globalStylesUrl from \"./styles/global.css\";\nimport globalMediumStylesUrl from \"./styles/global-medium.css\";\nimport globalLargeStylesUrl from \"./styles/global-large.css\";\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: globalStylesUrl },\n    {\n      rel: \"stylesheet\",\n      href: globalMediumStylesUrl,\n      media: \"print, (min-width: 640px)\",\n    },\n    {\n      rel: \"stylesheet\",\n      href: globalLargeStylesUrl,\n      media: \"screen and (min-width: 1024px)\",\n    },\n  ];\n};\n\n//seo keyword\nexport let meta: MetaFunction = () => {\n  let description = `Learn Remix and laugh at the same time!`;\n  return {\n    description,\n    keywords: \"Remix,forum\",\n    \"twitter:image\": \"https://remix-jokes.lol/social.png\",\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:creator\": \"@remix_run\",\n    \"twitter:site\": \"@remix_run\",\n    \"twitter:title\": \"Remix Jokes\",\n    \"twitter:description\": description,\n  };\n};\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <Meta />\n        {title ? <title>{title}</title> : null}\n        <Links />\n      </head>\n      <body>\n        {children}\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <div className=\"error-container\">\n        <h1>\n          {caught.status} {caught.statusText}\n        </h1>\n      </div>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <Document title=\"Uh-oh!\">\n      <div className=\"error-container\">\n        <h1>App Error</h1>\n        <pre>{error.message}</pre>\n      </div>\n    </Document>\n  );\n}\n", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"title\": \"testing\"\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.p>{\"wow is this really a simple thing ?\"}</_components.p></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"test category.md\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          ", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"title\": \"90s Mix CD-R\"\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    p: \"p\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.h1>{\"90s Mix CD-R\"}</_components.h1>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"I wish (Skee-Lo)\\nwhat is this ?\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2>{\"so this is header ?\"}</_components.h2>{\"\\n\"}<_components.p>{\"yes\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"This Is How We Do It (Montell Jordan)\"}</_components.li>{\"\\n\"}<_components.li>{\"Everlong (Foo Fighters)\"}</_components.li>{\"\\n\"}<_components.li>{\"Ms. Jackson (Outkast)\"}</_components.li>{\"\\n\"}<_components.li>{\"Interstate Love Song (Stone Temple Pilots)\"}</_components.li>{\"\\n\"}<_components.li>{\"Killing Me Softely With His Song (Fugees, Ms. Lauryn Hill)\"}</_components.li>{\"\\n\"}<_components.li>{\"Just a Friend (Biz Markie)\"}</_components.li>{\"\\n\"}<_components.li>{\"The Man Who Sold The World (Nirvana)\"}</_components.li>{\"\\n\"}<_components.li>{\"Semi-Charmed Lif (Third Eye Blind)\"}</_components.li>{\"\\n\"}<_components.li>{\"...Baby One More Time (Britney Spears)\"}</_components.li>{\"\\n\"}<_components.li>{\"Better Man (Pearl Jam)\"}</_components.li>{\"\\n\"}<_components.li>{\"It's All Coming Back to Me Now (C\u00E9line Dion)\"}</_components.li>{\"\\n\"}<_components.li>{\"This Kiss (Faith Hill)\"}</_components.li>{\"\\n\"}<_components.li>{\"Fly Away (Lenny Kravits)\"}</_components.li>{\"\\n\"}<_components.li>{\"Scar Tissue (Red Hot Chili Peppers)\"}</_components.li>{\"\\n\"}<_components.li>{\"Santa Monica (Everclear)\"}</_components.li>{\"\\n\"}<_components.li>{\"C'mon N' Ride it (Quad City DJ's)\"}</_components.li>{\"\\n\"}</_components.ul></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"90s-mix-cdr.md\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          ", "import { useEffect, useRef } from \"react\";\nimport type { ActionFunction } from \"remix\";\nimport { Form, json, useActionData, redirect } from \"remix\";\n\nexport function meta() {\n  return { title: \"Actions Demo\" };\n}\n\n// When your form sends a POST, the action is called on the server.\n// - https://remix.run/api/conventions#action\n// - https://remix.run/guides/data-updates\nexport let action: ActionFunction = async ({ request }) => {\n  let formData = await request.formData();\n  let answer = formData.get(\"answer\");\n\n  // Typical action workflows start with validating the form data that just came\n  // over the network. Clientside validation is fine, but you definitely need it\n  // server side.  If there's a problem, return the the data and the component\n  // can render it.\n  if (typeof answer !== \"string\") {\n    return json(\"Come on, at least try!\", { status: 400 });\n  }\n\n  if (answer !== \"egg\") {\n    return json(`Sorry, ${answer} is not right.`, { status: 400 });\n  }\n\n  // Finally, if the data is valid, you'll typically write to a database or send or\n  // email or log the user in, etc. It's recommended to redirect after a\n  // successful action, even if it's to the same place so that non-JavaScript workflows\n  // from the browser doesn't repost the data if the user clicks back.\n  return redirect(\"/demos/correct\");\n};\n\nexport default function ActionsDemo() {\n  // https://remix.run/api/remix#useactiondata\n  let actionMessage = useActionData<string>();\n  let answerRef = useRef<HTMLInputElement>(null);\n\n  // This form works without JavaScript, but when we have JavaScript we can make\n  // the experience better by selecting the input on wrong answers! Go ahead, disable\n  // JavaScript in your browser and see what happens.\n  useEffect(() => {\n    if (actionMessage && answerRef.current) {\n      answerRef.current.select();\n    }\n  }, [actionMessage]);\n\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <h2>Actions!</h2>\n        <p>\n          This form submission will send a post request that we handle in our\n          `action` export. Any route can export an action to handle data\n          mutations.\n        </p>\n        <Form method=\"post\" className=\"remix__form\">\n          <h3>Post an Action</h3>\n          <p>\n            <i>What is more useful when it is broken?</i>\n          </p>\n          <label>\n            <div>Answer:</div>\n            <input ref={answerRef} name=\"answer\" type=\"text\" />\n          </label>\n          <div>\n            <button>Answer!</button>\n          </div>\n          {actionMessage ? (\n            <p>\n              <b>{actionMessage}</b>\n            </p>\n          ) : null}\n        </Form>\n      </main>\n\n      <aside>\n        <h3>Additional Resources</h3>\n        <ul>\n          <li>\n            Guide:{\" \"}\n            <a href=\"https://remix.run/guides/data-writes\">Data Writes</a>\n          </li>\n          <li>\n            API:{\" \"}\n            <a href=\"https://remix.run/api/conventions#action\">\n              Route Action Export\n            </a>\n          </li>\n          <li>\n            API:{\" \"}\n            <a href=\"https://remix.run/api/remix#useactiondata\">\n              <code>useActionData</code>\n            </a>\n          </li>\n        </ul>\n      </aside>\n    </div>\n  );\n}\n", "export default function NiceWork() {\n  return <h1>You got it right!</h1>;\n}\n", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"title\": \"My First Post\"\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    hr: \"hr\",\n    h1: \"h1\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.hr />{\"\\n\"}<_components.hr />{\"\\n\"}<_components.h1>{\"This is Demo Section\"}</_components.h1>{\"\\n\"}<_components.hr />{\"\\n\"}<_components.h2>{\"Soon\"}</_components.h2>{\"\\n\"}<_components.hr />{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Created using markdown format\"}</_components.li>{\"\\n\"}</_components.ul></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"my-first-post.md\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          ", "import { useCatch, Link, json, useLoaderData, Outlet } from \"remix\";\n\nexport function meta() {\n  return { title: \"Boundaries Demo\" };\n}\n\nexport default function Boundaries() {\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <Outlet />\n      </main>\n\n      <aside>\n        <h2>Click these Links</h2>\n        <ul>\n          <li>\n            <Link to=\".\">Start over</Link>\n          </li>\n          <li>\n            <Link to=\"one\">\n              Param: <i>one</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"two\">\n              Param: <i>two</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"this-record-does-not-exist\">This will be a 404</Link>\n          </li>\n          <li>\n            <Link to=\"shh-its-a-secret\">And this will be 401 Unauthorized</Link>\n          </li>\n          <li>\n            <Link to=\"kaboom\">This one will throw an error</Link>\n          </li>\n        </ul>\n      </aside>\n    </div>\n  );\n}\n", "import { useCatch, Link, json, useLoaderData, Outlet } from \"remix\";\nimport type { LoaderFunction } from \"remix\";\n\nexport default function Boundaries() {\n  return (\n    <>\n      <h2>Params</h2>\n      <p>\n        When you name a route segment with $ like{\" \"}\n        <code>routes/users/$userId.js</code>, the $ segment will be parsed from\n        the URL and sent to your loaders and actions by the same name.\n      </p>\n      <h2>Errors</h2>\n      <p>\n        When a route throws and error in it's action, loader, or component,\n        Remix automatically catches it, won't even try to render the component,\n        but it will render the route's ErrorBoundary instead. If the route\n        doesn't have one, it will bubble up to the routes above it until it hits\n        the root.\n      </p>\n      <p>So be as granular as you want with your error handling.</p>\n      <h2>Not Found</h2>\n      <p>\n        (and other{\" \"}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses\">\n          client errors\n        </a>\n        )\n      </p>\n      <p>\n        Loaders and Actions can throw a <code>Response</code> instead of an\n        error and Remix will render the CatchBoundary instead of the component.\n        This is great when loading data from a database isn't found. As soon as\n        you know you can't render the component normally, throw a 404 response\n        and send your app into the catch boundary. Just like error boundaries,\n        catch boundaries bubble, too.\n      </p>\n    </>\n  );\n}\n", "import { useCatch, Link, json, useLoaderData } from \"remix\";\nimport type { LoaderFunction, MetaFunction } from \"remix\";\n\n// The `$` in route filenames becomes a pattern that's parsed from the URL and\n// passed to your loaders so you can look up data.\n// - https://remix.run/api/conventions#loader-params\nexport let loader: LoaderFunction = async ({ params }) => {\n  // pretend like we're using params.id to look something up in the db\n\n  if (params.id === \"this-record-does-not-exist\") {\n    // If the record doesn't exist we can't render the route normally, so\n    // instead we throw a 404 reponse to stop running code here and show the\n    // user the catch boundary.\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n\n  // now pretend like the record exists but the user just isn't authorized to\n  // see it.\n  if (params.id === \"shh-its-a-secret\") {\n    // Again, we can't render the component if the user isn't authorized. You\n    // can even put data in the response that might help the user rectify the\n    // issue! Like emailing the webmaster for access to the page. (Oh, right,\n    // `json` is just a Response helper that makes it easier to send JSON\n    // responses).\n    throw json({ webmasterEmail: \"hello@remix.run\" }, { status: 401 });\n  }\n\n  // Sometimes your code just blows up and you never anticipated it. Remix will\n  // automatically catch it and send the UI to the error boundary.\n  if (params.id === \"kaboom\") {\n    lol();\n  }\n\n  // but otherwise the record was found, user has access, so we can do whatever\n  // else we needed to in the loader and return the data. (This is boring, we're\n  // just gonna return the params.id).\n  return { param: params.id };\n};\n\nexport default function ParamDemo() {\n  let data = useLoaderData();\n  return (\n    <h1>\n      The param is <i style={{ color: \"red\" }}>{data.param}</i>\n    </h1>\n  );\n}\n\n// https://remix.run/api/conventions#catchboundary\n// https://remix.run/api/remix#usecatch\n// https://remix.run/api/guides/not-found\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message: React.ReactNode;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Looks like you tried to visit a page that you do not have access to.\n          Maybe ask the webmaster ({caught.data.webmasterEmail}) for access.\n        </p>\n      );\n    case 404:\n      message = (\n        <p>Looks like you tried to visit a page that does not exist.</p>\n      );\n    default:\n      message = (\n        <p>\n          There was a problem with your request!\n          <br />\n          {caught.status} {caught.statusText}\n        </p>\n      );\n  }\n\n  return (\n    <>\n      <h2>Oops!</h2>\n      <p>{message}</p>\n      <p>\n        (Isn't it cool that the user gets to stay in context and try a different\n        link in the parts of the UI that didn't blow up?)\n      </p>\n    </>\n  );\n}\n\n// https://remix.run/api/conventions#errorboundary\n// https://remix.run/api/guides/not-found\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <>\n      <h2>Error!</h2>\n      <p>{error.message}</p>\n      <p>\n        (Isn't it cool that the user gets to stay in context and try a different\n        link in the parts of the UI that didn't blow up?)\n      </p>\n    </>\n  );\n}\n\nexport let meta: MetaFunction = ({ data }) => {\n  return {\n    title: data ? `Param: ${data.param}` : \"Oops...\",\n  };\n};\n", "import { Outlet } from \"remix\";\nimport type { MetaFunction, LinksFunction } from \"remix\";\n\nimport stylesUrl from \"~/styles/demos/about.css\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"About Remix\"\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"about\">\n      <div className=\"about__intro\">\n        <h2>About Us</h2>\n        <p>\n          Ok, so this page isn't really <em>about us</em>, but we did want to\n          show you a few more things Remix can do.\n        </p>\n        <p>\n          Did you notice that things look a little different on this page? The\n          CSS that we import in the route file and include in its{\" \"}\n          <code>links</code> export is only included on this route and its\n          children.\n        </p>\n        <p>\n          Wait a sec...<em>its children</em>? To understand what we mean by\n          this,{\" \"}\n          <a href=\"https://remix.run/tutorial/4-nested-routes-params\">\n            read all about nested routes in the docs\n          </a>\n          .\n        </p>\n        <hr />\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"remix\";\n\nexport default function AboutIndex() {\n  return (\n    <div>\n      <p>\n        You are looking at the index route for the <code>/about</code> URL\n        segment, but there are nested routes as well!\n      </p>\n      <p>\n        <strong>\n          <Link to=\"whoa\">Check out one of them here.</Link>\n        </strong>\n      </p>\n    </div>\n  );\n}\n", "import { Link } from \"remix\";\n\nexport default function AboutIndex() {\n  return (\n    <div>\n      <p>\n        Whoa, this is a nested route! We render the <code>/about</code> layout\n        route component, and its <code>Outlet</code> renders our route\n        component. \uD83E\uDD2F\n      </p>\n      <p>\n        <strong>\n          <Link to=\"..\">\n            Go back to the <code>/about</code> index.\n          </Link>\n        </strong>\n      </p>\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"remix\";\nimport { db } from \"~/utils/db.server\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let jokes = await db.joke.findMany({\n    take: 100,\n    orderBy: { createdAt: \"desc\" },\n    include: { jokester: { select: { username: true } } },\n  });\n\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n  if (!host) {\n    throw new Error(\"Could not determine domain URL.\");\n  }\n  const protocol = host.includes(\"localhost\") ? \"http\" : \"https\";\n  let domain = `${protocol}://${host}`;\n  const jokesUrl = `${domain}/jokes`;\n\n  let rssString = `\n    <rss xmlns:blogChannel=\"${jokesUrl}\" version=\"2.0\">\n      <channel>\n        <title>Remix Jokes</title>\n        <link>${jokesUrl}</link>\n        <description>Some funny jokes</description>\n        <language>en-us</language>\n        <generator>Kody the Koala</generator>\n        <ttl>40</ttl>\n        ${jokes\n          .map((joke) =>\n            `\n            <item>\n              <title>${joke.name}</title>\n              <description>A funny joke called ${joke.name}</description>\n              <author>${joke.jokester.username}</author>\n              <pubDate>${joke.createdAt}</pubDate>\n              <link>${jokesUrl}/${joke.id}</link>\n              <guid>${jokesUrl}/${joke.id}</guid>\n            </item>\n          `.trim()\n          )\n          .join(\"\\n\")}\n      </channel>\n    </rss>\n  `.trim();\n\n  return new Response(rssString, {\n    headers: {\n      \"Cache-Control\": `public, max-age=${60 * 10}, s-maxage=${60 * 60 * 24}`,\n      \"Content-Type\": \"application/xml\",\n      \"Content-Length\": String(Buffer.byteLength(rssString)),\n    },\n  });\n};\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n  db.$connect();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n    global.__db.$connect();\n  }\n  db = global.__db;\n}\n\nexport { db };\n", "import type { ActionFunction, LoaderFunction } from \"remix\";\nimport { redirect } from \"remix\";\nimport { logout } from \"~/utils/session.server\";\n\nexport let action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport let loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import bcrypt from \"bcrypt\";\nimport { createCookieSessionStorage, redirect } from \"remix\";\nimport { db } from \"./db.server\";\n\ntype LoginForm = {\n  username: string;\n  password: string;\n};\n\nexport async function register({ username, password }: LoginForm) {\n  let passwordHash = await bcrypt.hash(password, 10);\n  return db.user.create({\n    data: { username, passwordHash },\n  });\n}\n\nexport async function login({ username, password }: LoginForm) {\n  let user = await db.user.findUnique({ where: { username } });\n  if (!user) return null;\n  let isCorrectPassword = await bcrypt.compare(password, user.passwordHash);\n  if (!isCorrectPassword) return null;\n  return user;\n}\n\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error(\"SESSION_SECRET must be set\");\n}\n\nlet storage = createCookieSessionStorage({\n  cookie: {\n    name: \"RJ_session\",\n    secure: true,\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true,\n  },\n});\n\nexport function getUserSession(request: Request) {\n  return storage.getSession(request.headers.get(\"Cookie\"));\n}\n\nexport async function getUserId(request: Request) {\n  let session = await getUserSession(request);\n  let userId = session.get(\"userId\");\n  if (!userId || typeof userId !== \"string\") return null;\n  return userId;\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  let session = await getUserSession(request);\n  let userId = session.get(\"userId\");\n  if (!userId || typeof userId !== \"string\") {\n    let searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  let userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  try {\n    let user = await db.user.findUnique({ where: { id: userId } });\n    return user;\n  } catch {\n    throw logout(request);\n  }\n}\n\nexport async function logout(request: Request) {\n  let session = await storage.getSession(request.headers.get(\"Cookie\"));\n  return redirect(\"/login\", {\n    headers: {\n      \"Set-Cookie\": await storage.destroySession(session),\n    },\n  });\n}\n\nexport async function createUserSession(userId: string, redirectTo: string) {\n  let session = await storage.getSession();\n  session.set(\"userId\", userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session),\n    },\n  });\n}\n", "import { Link } from \"remix\";\nimport type { MetaFunction, LinksFunction } from \"remix\";\nimport stylesUrl from \"../styles/index.css\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Forum Sample\",\n    description: \"An Application Fullstack using Remix\",\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1>\n          Forum <span>Remix</span>\n        </h1>\n        <h4> An Application using Remix JS \n          </h4>\n          <br>\n        </br>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"jokes\">Go To Index</Link>\n            </li>\n            <li>\n              <Link reloadDocument to=\"/jokes.rss\">\n                RSS\n              </Link>\n            </li>\n            <Link reloadDocument to=\"/my-first-post.md\">\n                Posts\n              </Link>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderFunction, LinksFunction } from \"remix\";\nimport { Form } from \"remix\";\nimport { Outlet, useLoaderData, Link } from \"remix\";\nimport { db } from \"~/utils/db.server\";\nimport type { User } from \"@prisma/client\";\nimport { getUser } from \"~/utils/session.server\";\nimport stylesUrl from \"../styles/jokes.css\";\n\ntype LoaderData = {\n  user: User | null;\n  jokeListItems: Array<{ id: string; name: string }>;\n};\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let jokeListItems = await db.joke.findMany({\n    take: 10,\n    select: { id: true, name: true },\n    orderBy: { createdAt: \"desc\" },\n  });\n  let user = await getUser(request);\n\n  let data: LoaderData = {\n    jokeListItems,\n    user,\n  };\n\n  return data;\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport default function JokesScreen() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div className=\"jokes-layout\">\n      <header className=\"jokes-header\">\n        <div className=\"container\">\n          <h1 className=\"home-link\">\n            <Link to=\"/\" title=\"Remix Jokes\" aria-label=\"Remix Jokes\">\n              <span className=\"logo\">\uD83E\uDD2A</span>\n              <span className=\"logo-medium\">Forum</span>\n            </Link>\n          </h1>\n          {data.user ? (\n            <div className=\"user-info\">\n              <span>{`Hi ${data.user.username}`}</span>\n              <Form action=\"/logout\" method=\"post\">\n                <button type=\"submit\" className=\"button\">\n                  Logout\n                </button>\n              </Form>\n            </div>\n          ) : (\n            <Link to=\"/login\">Login</Link>\n          )}\n        </div>\n      </header>\n      <main className=\"jokes-main\">\n        <div className=\"container\">\n          <div className=\"jokes-list\">\n            {data.jokeListItems.length ? (\n              <>\n                <Link to=\".\">Get More Post Topic</Link>\n                <p>Here are a post to check out:</p>\n                <ul>\n                  {data.jokeListItems.map(({ id, name }) => (\n                    <li key={id}>\n                      <Link to={id} prefetch=\"intent\">\n                        {name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n                <Link to=\"new\" className=\"button\">\n                  Create a Post\n                </Link>\n              </>\n            ) : null}\n          </div>\n          <div className=\"jokes-outlet\">\n            <Outlet />\n          </div>\n        </div>\n      </main>\n      <footer className=\"jokes-footer\">\n        <div className=\"container\">\n          <Link reloadDocument to=\"/jokes.rss\">\n            RSS\n          </Link>\n        </div>\n      </footer>\n    </div>\n  );\n}\n", "export {}", "import type { LoaderFunction, ActionFunction, MetaFunction } from \"remix\";\nimport { useLoaderData, useCatch, redirect } from \"remix\";\nimport { useParams } from \"react-router-dom\";\nimport type { Joke } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\nimport { getUserId, requireUserId } from \"~/utils/session.server\";\nimport { JokeDisplay } from \"~/components/joke\";\n\n//exception and route handling\n\nexport let meta: MetaFunction = ({\n  data,\n}: {\n  data: LoaderData | undefined;\n}) => {\n  if (!data) {\n    return {\n      title: \"No joke\",\n      description: \"No joke found\",\n    };\n  }\n  return {\n    title: `\"${data.joke.name}\" joke`,\n    description: `Enjoy the \"${data.joke.name}\" joke and much more`,\n  };\n};\n\ntype LoaderData = { joke: Joke; isOwner: boolean };\n\nexport let loader: LoaderFunction = async ({ request, params }) => {\n  let userId = await getUserId(request);\n  let joke = await db.joke.findUnique({ where: { id: params.jokeId } });\n  if (!joke) {\n    throw new Response(\"What a joke! Not found.\", { status: 404 });\n  }\n  let data: LoaderData = { joke, isOwner: userId === joke.jokesterId };\n  return data;\n};\n\nexport let action: ActionFunction = async ({ request, params }) => {\n  let form = await request.formData();\n  if (form.get(\"_method\") === \"delete\") {\n    let userId = await requireUserId(request);\n    let joke = await db.joke.findUnique({ where: { id: params.jokeId } });\n    if (!joke) {\n      throw new Response(\"Can't delete what does not exist\", { status: 404 });\n    }\n    if (joke.jokesterId !== userId) {\n      throw new Response(\"Pssh, nice try. That's not your joke\", {\n        status: 401,\n      });\n    }\n    await db.joke.delete({ where: { id: params.jokeId } });\n    return redirect(\"/jokes\");\n  }\n};\n\nexport default function JokeRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return <JokeDisplay joke={data.joke} isOwner={data.isOwner} />;\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n  let params = useParams();\n  switch (caught.status) {\n    case 404: {\n      return (\n        <div className=\"error-container\">\n          Huh? What the heck is {params.jokeId}?\n        </div>\n      );\n    }\n    case 401: {\n      return (\n        <div className=\"error-container\">\n          Sorry, but {params.jokeId} is not your joke.\n        </div>\n      );\n    }\n    default: {\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  let { jokeId } = useParams();\n  return (\n    <div>{`There was an error loading joke by the id ${jokeId}. Sorry.`}</div>\n  );\n}\n", "import { Link, Form } from \"remix\";\nimport type { Joke } from \"@prisma/client\";\n\nexport function JokeDisplay({\n  joke,\n  isOwner,\n  canDelete = true,\n}: {\n  joke: Pick<Joke, \"content\" | \"name\">;\n  isOwner: boolean;\n  canDelete?: boolean;\n}) {\n  return (\n    <div>\n      <p>Here's your hilarious joke:</p>\n      <p>{joke.content}</p>\n      <Link to=\".\">{joke.name} Permalink</Link>\n      {isOwner ? (\n        <Form method=\"post\">\n          <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n          <button type=\"submit\" className=\"button\" disabled={!canDelete}>\n            Delete\n          </button>\n        </Form>\n      ) : null}\n      <br></br>\n      <br></br>\n      <Form method=\"post\">\n          <input type=\"hidden\" name=\"_method\" value=\"reply\" />\n          <button type=\"submit\" className=\"button\" >\n            Reply\n          </button>\n        </Form>\n    </div>\n  );\n}\n", "export {}", "import { useLoaderData, Link, useCatch } from \"remix\";\nimport type { Joke } from \"@prisma/client\";\n\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderData = { randomJoke: Joke };\n\nexport let loader = async () => {\n  const count = await db.joke.count();\n  const randomRowNumber = Math.floor(Math.random() * count);\n  let [randomJoke] = await db.joke.findMany({ take: 1, skip: randomRowNumber });\n  if (!randomJoke) {\n    throw new Response(\"No jokes to be found!\", { status: 404 });\n  }\n  let data: LoaderData = { randomJoke };\n  return data;\n};\n\nexport default function JokesIndexRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's a random post:</p>\n      <p>{data.randomJoke.content}</p>\n      <Link to={data.randomJoke.id}>\"{data.randomJoke.name}\" Permalink</Link>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <div className=\"error-container\">\n        <p>There are no post to display. Perhaps you want to create ?</p>\n        <Link to=\"new\">Create your own </Link>\n      </div>\n    );\n  }\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return <div>I did a whoopsies.</div>;\n}\n", "import type { ActionFunction, LoaderFunction } from \"remix\";\nimport {\n  Link,\n  useCatch,\n  useActionData,\n  Form,\n  redirect,\n  useTransition,\n} from \"remix\";\nimport { JokeDisplay } from \"~/components/joke\";\nimport { db } from \"~/utils/db.server\";\nimport { getUserId, requireUserId } from \"~/utils/session.server\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let userId = await getUserId(request);\n  if (!userId) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return {};\n};\n\nfunction validateJokeContent(content: string) {\n  if (content.length < 10) {\n    return `The post is too short`;\n  }\n}\n\nfunction validateJokeName(name: string) {\n  if (name.length < 1) {\n    return `Is it your name ?`;\n  }\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: { name: string | undefined; content: string | undefined };\n  fields?: {\n    name: string;\n    content: string;\n  };\n};\n\nexport let action: ActionFunction = async ({\n  request,\n}): Promise<Response | ActionData> => {\n  const userId = await requireUserId(request);\n\n  let form = await request.formData();\n  let name = form.get(\"name\");\n  let content = form.get(\"content\");\n  if (typeof name !== \"string\" || typeof content !== \"string\") {\n    return { formError: `Form not submitted correctly.` };\n  }\n\n  let fieldErrors = {\n    name: validateJokeName(name),\n    content: validateJokeContent(content),\n  };\n  let fields = { name, content };\n  if (Object.values(fieldErrors).some(Boolean)) return { fieldErrors, fields };\n\n  let joke = await db.joke.create({ data: { ...fields, jokesterId: userId } });\n  return redirect(`/jokes/${joke.id}?redirectTo=/jokes/new`);\n};\n\nexport default function NewJokeRoute() {\n  let actionData = useActionData<ActionData | undefined>();\n  let transition = useTransition();\n\n  if (transition.submission) {\n    let name = transition.submission.formData.get(\"name\");\n    let content = transition.submission.formData.get(\"content\");\n    if (\n      typeof name === \"string\" &&\n      typeof content === \"string\" &&\n      !validateJokeContent(content) &&\n      !validateJokeName(name)\n    ) {\n      return (\n        <JokeDisplay\n          joke={{ name, content }}\n          isOwner={true}\n          canDelete={false}\n        />\n      );\n    }\n  }\n\n  return (\n    <div>\n      <p>Create your own post</p>\n      <Form method=\"post\">\n        <div>\n          <label>\n            Name:{\" \"}\n            <input\n              type=\"text\"\n              defaultValue={actionData?.fields?.name}\n              name=\"name\"\n              aria-invalid={Boolean(actionData?.fieldErrors?.name)}\n              aria-describedby={\n                actionData?.fieldErrors?.name ? \"name-error\" : undefined\n              }\n            />\n          </label>\n          {actionData?.fieldErrors?.name ? (\n            <p className=\"form-validation-error\" role=\"alert\" id=\"name-error\">\n              {actionData.fieldErrors.name}\n            </p>\n          ) : null}\n        </div>\n        <div>\n          <label>\n            Content:{\" \"}\n            <textarea\n              defaultValue={actionData?.fields?.content}\n              name=\"content\"\n              aria-invalid={Boolean(actionData?.fieldErrors?.content)}\n              aria-describedby={\n                actionData?.fieldErrors?.content ? \"content-error\" : undefined\n              }\n            />\n          </label>\n          {actionData?.fieldErrors?.content ? (\n            <p\n              className=\"form-validation-error\"\n              role=\"alert\"\n              id=\"content-error\"\n            >\n              {actionData.fieldErrors.content}\n            </p>\n          ) : null}\n        </div>\n        <div>\n          <button type=\"submit\" className=\"button\">\n            Add\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  if (caught.status === 401) {\n    return (\n      <div className=\"error-container\">\n        <p>Please login to create post.</p>\n        <Link to=\"/login?redirectTo=/jokes/new\">Login</Link>\n      </div>\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return <div>Something unexpected went wrong. Sorry about that.</div>;\n}\n", "import type { ActionFunction, LinksFunction, MetaFunction } from \"remix\";\nimport { useActionData, Form, Link } from \"remix\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { login, createUserSession, register } from \"~/utils/session.server\";\nimport { db } from \"~/utils/db.server\";\nimport stylesUrl from \"../styles/login.css\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Remix Jokes | Login\",\n    description: \"Login to submit your own jokes to Remix Jokes!\",\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nfunction validateUsername(username: unknown) {\n  if (typeof username !== \"string\" || username.length < 3) {\n    return `Usernames must be at least 3 characters long`;\n  }\n}\n\nfunction validatePassword(password: unknown) {\n  if (typeof password !== \"string\" || password.length < 6) {\n    return `Passwords must be at least 6 characters long`;\n  }\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: { username: string | undefined; password: string | undefined };\n  fields?: { loginType: string; username: string; password: string };\n};\n\nexport let action: ActionFunction = async ({\n  request,\n}): Promise<Response | ActionData> => {\n  let form = await request.formData();\n  let loginType = form.get(\"loginType\");\n  let username = form.get(\"username\");\n  let password = form.get(\"password\");\n  let redirectTo = form.get(\"redirectTo\") || \"/jokes\";\n  if (\n    typeof loginType !== \"string\" ||\n    typeof username !== \"string\" ||\n    typeof password !== \"string\" ||\n    typeof redirectTo !== \"string\"\n  ) {\n    return { formError: `Form not submitted correctly.` };\n  }\n\n  let fields = { loginType, username, password };\n  let fieldErrors = {\n    username: validateUsername(username),\n    password: validatePassword(password),\n  };\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return { fieldErrors, fields };\n  }\n\n  switch (loginType) {\n    case \"login\": {\n      const user = await login({ username, password });\n      if (!user) {\n        return {\n          fields,\n          formError: `Username/Password combination is incorrect`,\n        };\n      }\n      return createUserSession(user.id, redirectTo);\n    }\n    case \"register\": {\n      let userExists = await db.user.findFirst({ where: { username } });\n      if (userExists) {\n        return {\n          fields,\n          formError: `User with username ${username} already exists`,\n        };\n      }\n      const user = await register({ username, password });\n      if (!user) {\n        return {\n          fields,\n          formError: `Something went wrong trying to create a new user.`,\n        };\n      }\n      return createUserSession(user.id, redirectTo);\n    }\n    default: {\n      return { fields, formError: `Login type invalid` };\n    }\n  }\n};\n\nexport default function Login() {\n  let actionData = useActionData<ActionData | undefined>();\n  let [searchParams] = useSearchParams();\n  return (\n    <div className=\"container\">\n      <div className=\"content\" data-light=\"\">\n        <h1>Login</h1>\n        <Form\n          method=\"post\"\n          aria-describedby={\n            actionData?.formError ? \"form-error-message\" : undefined\n          }\n        >\n          <input\n            type=\"hidden\"\n            name=\"redirectTo\"\n            value={searchParams.get(\"redirectTo\") ?? undefined}\n          />\n          <fieldset>\n            <legend className=\"sr-only\">Login or Register?</legend>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"login\"\n                defaultChecked={\n                  !actionData?.fields?.loginType ||\n                  actionData?.fields?.loginType === \"login\"\n                }\n              />{\" \"}\n              Login\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"register\"\n                defaultChecked={actionData?.fields?.loginType === \"register\"}\n              />{\" \"}\n              Register\n            </label>\n          </fieldset>\n          <div>\n            <label htmlFor=\"username-input\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username-input\"\n              name=\"username\"\n              defaultValue={actionData?.fields?.username}\n              aria-invalid={Boolean(actionData?.fieldErrors?.username)}\n              aria-describedby={\n                actionData?.fieldErrors?.username ? \"username-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.username ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"username-error\"\n              >\n                {actionData.fieldErrors.username}\n              </p>\n            ) : null}\n          </div>\n          <div>\n            <label htmlFor=\"password-input\">Password</label>\n            <input\n              id=\"password-input\"\n              name=\"password\"\n              defaultValue={actionData?.fields?.password}\n              type=\"password\"\n              aria-invalid={Boolean(actionData?.fieldErrors?.password)}\n              aria-describedby={\n                actionData?.fieldErrors?.password ? \"password-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.password ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"password-error\"\n              >\n                {actionData.fieldErrors.password}\n              </p>\n            ) : null}\n          </div>\n          <div id=\"form-error-message\">\n            {actionData?.formError ? (\n              <p className=\"form-validation-error\" role=\"alert\">\n                {actionData.formError}\n              </p>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"button\">\n            Submit\n          </button>\n        </Form>\n      </div>\n      <div className=\"links\">\n        <ul>\n          <li>\n            <Link to=\"/\">Title</Link>\n          </li>\n          <li>\n            <Link to=\"/jokes\">Forum</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
